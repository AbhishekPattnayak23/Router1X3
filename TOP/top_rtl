`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: Maven Silicon
// Engineer: Abhishek Pattnayak
// 
// Create Date: 04/07/2024 04:05:11 PM
// Design Name: Top module
// Module Name: router_top
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module router_top(clk,rstn,read_enb_0,read_enb_1,read_enb_2, data_in,pkt_valid,data_out_0,data_out_1,data_out_2,
valid_out_0,valid_out_1,valid_out_2,err,busy);

input clk,rstn,read_enb_0,read_enb_1,read_enb_2,pkt_valid;
input [7:0] data_in;
output [7:0]data_out_0,data_out_1,data_out_2;
output valid_out_0,valid_out_1,valid_out_2,err,busy;

wire soft_reset_0,soft_reset_1,soft_reset_2,lfd_state,fifo_full,detect_add,ld_state,laf_state,full_state;
wire rst_int_reg,parity_done,low_packet_valid,write_enb_reg;
wire empty_0,empty_1,empty_2;
wire full_0,full_1,full_2;
wire [2:0]write_enb;
wire [7:0]din;

//FIFO 

router_fifo FIFO_0(.clk(clk),.rstn(rstn),.we(write_enb[0]),.re(read_enb_0),.din(din),
.lfd_state(lfd_state),.soft_rst(soft_reset_0),.empty(empty_0),.full(full_0),.dout(data_out_0));

router_fifo FIFO_1(.clk(clk),.rstn(rstn),.we(write_enb[1]),.re(read_enb_1),.din(din),
.lfd_state(lfd_state),.soft_rst(soft_reset_1),.empty(empty_1),.full(full_1),.dout(data_out_1));

router_fifo FIFO_2(.clk(clk),.rstn(rstn),.we(write_enb[2]),.re(read_enb_2),.din(din),
.lfd_state(lfd_state),.soft_rst(soft_reset_2),.empty(empty_2),.full(full_2),.dout(data_out_2));

//REGISTER

router_reg reg1(.clk(clk),.rstn(rstn),.pkt_valid(pkt_valid),.data_in(data_in),.fifo_full(fifo_full),.detect_add(detect_add),
                  .ld_state(ld_state),.laf_state(laf_state),.full_state(full_state),.lfd_state(lfd_state),
                  .rst_int_reg(rst_int_reg),.err(err),.parity_done(parity_done),.low_packet_valid(low_packet_valid),.dout(din));
                  
//SYNCHRONIZER

synchronizer sync(.clk(clk),.rstn(rstn),.soft_rst_0(soft_reset_0),.soft_rst_1(soft_reset_1),.soft_rst_2(soft_reset_2),.detect_addr(detect_add),
                    .data_in(data_in[1:0]) ,.wr_enb_reg(write_enb_reg),.valid_out_0(valid_out_0),.valid_out_1(valid_out_1),
                    .valid_out_2(valid_out_2),.wr_enb(write_enb[2:0]),.fifo_full(fifo_full),.empty_0(empty_0),.empty_1(empty_1), 
                    .empty_2(empty_2),.read_enb_0(read_enb_0),.read_enb_1(read_enb_1),.read_enb_2(read_enb_2),.full_0(full_0) , 
                    .full_1(full_1),.full_2(full_2) ); 
                  
//FSM

router_fsm fsm1(.clk(clk),.rstn(rstn),.pkt_valid(pkt_valid),.data_in(data_in[1:0]),.fifo_full(fifo_full),
                .fifo_empty_0(empty_0),.fifo_empty_1(empty_1),.fifo_empty_2(empty_2),
                .soft_reset_0(soft_reset_0),.soft_reset_1(soft_reset_1),.soft_reset_2(soft_reset_2),
                .parity_done(parity_done),.low_packet_valid(low_packet_valid),.write_enb_reg(write_enb_reg),
                .detect_add(detect_add),.ld_state(ld_state),.laf_state(laf_state),.lfd_state(lfd_state),
                .full_state(full_state),.rst_int_reg(rst_int_reg),.busy(busy));                  


endmodule
